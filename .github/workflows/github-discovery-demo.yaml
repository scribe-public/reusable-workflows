name: Github Discovery and Verification Demo

on:
  workflow_call:
    inputs:
      scribe_valint_url:
        description: "Scribe Valint URL"
        required: false
        type: string
        default: "https://api.scribesecurity.com"
      scribe_platforms_version: 
        description: "Scribe Platforms Version"
        required: false
        type: string
        default: "latest"
      scribe_product_version:
        description: "Scribe Product Version"
        required: false
        type: string
        default: "1.0.0"
      valint_log_level:
        description: "Valint log level"
        required: false
        default: "info"
        type: string
      platforms_log_level:
        description: "Platforms log level"
        required: false
        default: "INFO"
        type: string
      trace:
        description: "Enable trace logging for platforms"
        required: false
        default: 'false'
        type: string
    secrets:
      SCRIBE_TOKEN:
        description: "Scribe token"
        required: true
      GH_TOKEN:
        description: "GitHub token with org, repo and workflows read permissions"
        required: true

env:
    PLATFORMS_VERSION: ${{ inputs.scribe_platforms_version }}
    VALINT_SCRIBE_URL: ${{ inputs.scribe_valint_url }}
    SCRIBE_PRODUCT_VERSION: ${{ inputs.scribe_product_version }}
    SCRIBE_TOKEN: ${{ secrets.SCRIBE_TOKEN }}
    PLATFORMS_DB_PATH: github_new.platforms.db
    VALINT_CONTEXT_TYPE: "github"
    VALINT_OUTPUT_DIRECTORY: evidence/github
    LOG_LEVEL: ${{ inputs.platforms_log_level }}
    VALINT_LOG_LEVEL: ${{ inputs.valint_log_level }}
    DEBUG: ${{ inputs.trace }}
    VALINT_DISABLE_EVIDENCE_CACHE: false
    VALINT_SCRIBE_ENABLE: true 
    DOCKER_DRIVER: overlay2

jobs:
    github-discovery:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          id-token: write

        steps:
          - name: Checkout repository
            uses: actions/checkout@v3

          - name: Find five most recently active repos
            run: |
              curl -s -H "Authorization: token ${{ secrets.GH_TOKEN}}" \
              "https://api.github.com/orgs/${{ github.repository_owner}}/repos?sort=updated&per_page=5" | jq -r '.[].name' > repo_list.txt   
              # this API call will return 
              # a list of your 5 most recently active GitHub repo. 
              # This list will be used as the discovery scope.
              cat repo_list.txt
              repo_scope=" "
              org_scope=" "
              while IFS= read -r repo; do
                repo_scope+="$repo::$repo::$SCRIBE_PRODUCT_VERSION "
              done < repo_list.txt

              while IFS= read -r repo; do
                org_scope+="${{github.repository_owner}}::$repo::$SCRIBE_PRODUCT_VERSION "
              done < repo_list.txt
              echo Repo Scope
              echo -------------
              echo "REPO_SCOPE="$repo_scope >> $GITHUB_ENV
              echo "ORG_SCOPE="$org_scope >> $GITHUB_ENV

    
          - name: GitHub Discover
            uses: scribe-security/action-platforms@master
            with:
              command: discover
              platform: github
              args: >-
                --token=${{ secrets.GH_TOKEN }}
                --url=https://api.github.com 
                --repository.mapping ${{ env.REPO_SCOPE }}
                --organization.mapping ${{ env.ORG_SCOPE }}
                --hook trivy_iac_and_secrets
            env:
              PLATFORMS_DB_PATH: github_new.platforms.db

          - name: INFO db
            run: |
              echo "GOT PLATFORMS_DB_PATH=${{ env.PLATFORMS_DB_PATH }}"
              pwd
              ls -lh
              find ~/ -name "*.db" || true

          - name: GitHub BOM
            uses: scribe-security/action-platforms@master
            with:
              command: bom
              platform: github
              valint_args: --valint.components files --valint.log-level debug
              args: >-
                --scope.organization='*'
                --repository.mapping ${{ env.REPO_SCOPE }}
                --hook opengrep
            env:
              PLATFORMS_DB_PATH: github_new.platforms.db
# --scope.organization ${{ github.repository_owner }}
            