name: Secret Scanning

on:
  workflow_call:
    inputs:
      scribe_product_name:
        description: "Scribe Product Name"
        required: true
        type: string
      scribe_product_version:
        description: "Scribe Product Version"
        required: true
        type: string
      exit_code:
        description: "Trivy exit code"
        required: false
        default: 0
        type: number
      exclude_files:
        description: "files to exclude from scanning"
        required: false
        default: ""
        type: string
      exclude_dirs:
        description: "directories to exclude from scanning"
        required: false
        default: ""
        type: string

    secrets:
        SCRIBE_TOKEN:
            description: "Scribe Token"
            required: true
        DOGFOODING_POLICY_ACCESS:
            description: "Dogfooding policy repository access token"
            required: true
        WEBHOOK_TRIGGER_SECRET:
            description: "Webhook trigger secret"
            required: false
            

jobs:
    secret-scanning:
        runs-on: ubuntu-latest
        steps:
            - name: install trivy
              run: |
                wget https://github.com/aquasecurity/trivy/releases/download/v0.55.2/trivy_0.55.2_Linux-64bit.deb
                sudo dpkg -i trivy_0.55.2_Linux-64bit.deb
                trivy -h

            - name: Checkout
              uses: actions/checkout@v2

            - name: create report name
              run: |
                REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
                echo ${{ github.ref_name}}
                echo "FILENAME=${REPO_NAME}-secret-scan.sarif" >> $GITHUB_ENV
                echo ${{ env.FILENAME }}
            - name: create exclude args
              run: |
                  EXCLUDE_ARGS=""
                  if [ -n "${{inputs.exclude_files}}" ]; then
                      EXCLUDE_ARGS="${EXCLUDE_ARGS} --skip-files ${{inputs.exclude_files}}"
                  fi
                  if [ -n "${{inputs.exclude_dirs}}" ]; then
                    EXCLUDE_ARGS="${EXCLUDE_ARGS} --skip-dirs ${{inputs.exclude_dirs}}"
                  fi
                  echo "EXCLUDE_ARGS=${EXCLUDE_ARGS}" >> $GITHUB_ENV
  
            - name: Run Trivy
              run: |
                trivy fs --scanners secret --severity CRITICAL,HIGH --format sarif --exit-code ${{inputs.exit_code}} -o ${{ env.FILENAME }} . ${{ env.EXCLUDE_ARGS }}

            - name: upload evidence
              uses: actions/upload-artifact@v4
              with:
                path: ${{ env.FILENAME }}
                name: secret-scan
                
            - name: install valint
              uses: scribe-security/action-installer@master

            - name: create evidence                 glpat-34jksiIUlaaddd8fhkejnfhi
              run: | 
                valint evidence  ${{ env.FILENAME}} --label ${{env.FILENAME}}  -P ${{ secrets.SCRIBE_TOKEN}} --product-key ${{inputs.scribe_product_name}} --product-version ${{inputs.scribe_product_version}}


            - name: evaluate policy
              run: >-
                valint verify 
                -P ${{ secrets.SCRIBE_TOKEN}}
                --bundle https://github.com/scribe-security/dogfooding-policies --bundle-branch main --bundle-auth ${{ secrets.DOGFOODING_POLICY_ACCESS}} 
                --policy secret-scan@policies --rule-args att_name=${{env.FILENAME}}
                --product-key ${{inputs.scribe_product_name}} --product-version ${{inputs.scribe_product_version}}

            
